@implements IAsyncDisposable
@inject IJSRuntime JS

<svg id="moleculeCanvas" class="molecule-container"></svg>


@code {
    private IJSObjectReference? module;

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            module = await JS.InvokeAsync<IJSObjectReference>("import",
                "./Pages/molecules.razor.js");

            await module.InvokeVoidAsync("initMoleculeAnimation");
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            try
            {
                await module.DisposeAsync();
            }
            catch (JSDisconnectedException)
            {
            }
        }
    }
}

@* @code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("initMoleculeAnimation");
        }
    }
}

    @inject IJSRuntime JS

<div id="molecule-container" class="molecule-container"></div>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Calls the initializeMolecules() function defined in your molecules.js file.
            await JS.InvokeVoidAsync("initializeMolecules");
        }
    }
}



 <div class="molecule-container">
    @for (int i = 0; i < 20; i++)  // Generate 20 molecules
    {
        <svg class="molecule" width="50" height="50">
            <circle cx="25" cy="25" r="10" fill="rgba(100, 200, 255, 0.8)" />
        </svg>
    }
</div> *@